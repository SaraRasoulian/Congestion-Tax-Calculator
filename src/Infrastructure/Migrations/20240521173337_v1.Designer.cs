// <auto-generated />
using System;
using Infrastructure.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(TaxDBContext))]
    [Migration("20240521173337_v1")]
    partial class v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.CityTaxRule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("IsDayBeforeHolidayTaxExempt")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHolidayTaxExempt")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsJulyTaxExempt")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsWeekendTaxExempt")
                        .HasColumnType("boolean");

                    b.Property<long>("MaximumTaxPerDay")
                        .HasColumnType("bigint");

                    b.Property<long>("SingleChargeDurationMinutes")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CityName")
                        .IsUnique();

                    b.ToTable("CityTaxRules");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CityName = "Gothenburg",
                            IsDayBeforeHolidayTaxExempt = true,
                            IsHolidayTaxExempt = true,
                            IsJulyTaxExempt = true,
                            IsWeekendTaxExempt = true,
                            MaximumTaxPerDay = 60L,
                            SingleChargeDurationMinutes = 60L
                        });
                });

            modelBuilder.Entity("Domain.Entities.Holiday", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CityTaxRuleId")
                        .HasColumnType("bigint");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CityTaxRuleId");

                    b.ToTable("Holidays");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CityTaxRuleId = 1L,
                            Date = new DateOnly(2013, 1, 1),
                            Description = "New year holiday"
                        },
                        new
                        {
                            Id = 2L,
                            CityTaxRuleId = 1L,
                            Date = new DateOnly(2013, 3, 29),
                            Description = "Good Friday"
                        },
                        new
                        {
                            Id = 3L,
                            CityTaxRuleId = 1L,
                            Date = new DateOnly(2013, 4, 1),
                            Description = "Easter Monday"
                        },
                        new
                        {
                            Id = 4L,
                            CityTaxRuleId = 1L,
                            Date = new DateOnly(2013, 5, 1),
                            Description = "Labour Day"
                        },
                        new
                        {
                            Id = 5L,
                            CityTaxRuleId = 1L,
                            Date = new DateOnly(2013, 5, 9),
                            Description = "Ascension Day"
                        },
                        new
                        {
                            Id = 6L,
                            CityTaxRuleId = 1L,
                            Date = new DateOnly(2013, 6, 6),
                            Description = "National Day"
                        },
                        new
                        {
                            Id = 7L,
                            CityTaxRuleId = 1L,
                            Date = new DateOnly(2013, 12, 25),
                            Description = "Christmas Day"
                        },
                        new
                        {
                            Id = 8L,
                            CityTaxRuleId = 1L,
                            Date = new DateOnly(2013, 12, 26),
                            Description = "Boxing Day"
                        });
                });

            modelBuilder.Entity("Domain.Entities.TaxAmount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<long>("CityTaxRuleId")
                        .HasColumnType("bigint");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time without time zone");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CityTaxRuleId");

                    b.ToTable("TaxAmounts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Amount = 0L,
                            CityTaxRuleId = 1L,
                            EndTime = new TimeOnly(5, 59, 0),
                            StartTime = new TimeOnly(0, 0, 0)
                        },
                        new
                        {
                            Id = 2L,
                            Amount = 8L,
                            CityTaxRuleId = 1L,
                            EndTime = new TimeOnly(6, 29, 0),
                            StartTime = new TimeOnly(6, 0, 0)
                        },
                        new
                        {
                            Id = 3L,
                            Amount = 13L,
                            CityTaxRuleId = 1L,
                            EndTime = new TimeOnly(6, 59, 0),
                            StartTime = new TimeOnly(6, 30, 0)
                        },
                        new
                        {
                            Id = 4L,
                            Amount = 18L,
                            CityTaxRuleId = 1L,
                            EndTime = new TimeOnly(7, 59, 0),
                            StartTime = new TimeOnly(7, 0, 0)
                        },
                        new
                        {
                            Id = 5L,
                            Amount = 13L,
                            CityTaxRuleId = 1L,
                            EndTime = new TimeOnly(8, 29, 0),
                            StartTime = new TimeOnly(8, 0, 0)
                        },
                        new
                        {
                            Id = 6L,
                            Amount = 8L,
                            CityTaxRuleId = 1L,
                            EndTime = new TimeOnly(14, 59, 0),
                            StartTime = new TimeOnly(8, 30, 0)
                        },
                        new
                        {
                            Id = 7L,
                            Amount = 13L,
                            CityTaxRuleId = 1L,
                            EndTime = new TimeOnly(15, 29, 0),
                            StartTime = new TimeOnly(15, 0, 0)
                        },
                        new
                        {
                            Id = 8L,
                            Amount = 18L,
                            CityTaxRuleId = 1L,
                            EndTime = new TimeOnly(16, 59, 0),
                            StartTime = new TimeOnly(15, 30, 0)
                        },
                        new
                        {
                            Id = 9L,
                            Amount = 13L,
                            CityTaxRuleId = 1L,
                            EndTime = new TimeOnly(17, 59, 0),
                            StartTime = new TimeOnly(17, 0, 0)
                        },
                        new
                        {
                            Id = 10L,
                            Amount = 8L,
                            CityTaxRuleId = 1L,
                            EndTime = new TimeOnly(18, 29, 0),
                            StartTime = new TimeOnly(18, 0, 0)
                        },
                        new
                        {
                            Id = 11L,
                            Amount = 0L,
                            CityTaxRuleId = 1L,
                            EndTime = new TimeOnly(23, 59, 0),
                            StartTime = new TimeOnly(18, 30, 0)
                        });
                });

            modelBuilder.Entity("Domain.Entities.TaxExemptVehicle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CityTaxRuleId")
                        .HasColumnType("bigint");

                    b.Property<string>("VehicleType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("CityTaxRuleId");

                    b.ToTable("TaxExemptVehicles");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CityTaxRuleId = 1L,
                            VehicleType = "Emergency"
                        },
                        new
                        {
                            Id = 2L,
                            CityTaxRuleId = 1L,
                            VehicleType = "Buss"
                        },
                        new
                        {
                            Id = 3L,
                            CityTaxRuleId = 1L,
                            VehicleType = "Diplomat"
                        },
                        new
                        {
                            Id = 4L,
                            CityTaxRuleId = 1L,
                            VehicleType = "Motorcycle"
                        },
                        new
                        {
                            Id = 5L,
                            CityTaxRuleId = 1L,
                            VehicleType = "Military"
                        },
                        new
                        {
                            Id = 6L,
                            CityTaxRuleId = 1L,
                            VehicleType = "Foreign"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Holiday", b =>
                {
                    b.HasOne("Domain.Entities.CityTaxRule", "CityTaxRule")
                        .WithMany("Holidays")
                        .HasForeignKey("CityTaxRuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CityTaxRule");
                });

            modelBuilder.Entity("Domain.Entities.TaxAmount", b =>
                {
                    b.HasOne("Domain.Entities.CityTaxRule", "CityTaxRule")
                        .WithMany("TaxAmounts")
                        .HasForeignKey("CityTaxRuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CityTaxRule");
                });

            modelBuilder.Entity("Domain.Entities.TaxExemptVehicle", b =>
                {
                    b.HasOne("Domain.Entities.CityTaxRule", "CityTaxRule")
                        .WithMany("TaxExemptVehicles")
                        .HasForeignKey("CityTaxRuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CityTaxRule");
                });

            modelBuilder.Entity("Domain.Entities.CityTaxRule", b =>
                {
                    b.Navigation("Holidays");

                    b.Navigation("TaxAmounts");

                    b.Navigation("TaxExemptVehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
